@page "/kunden"
@inject DialogService DialogService

<PageTitle>Kunden</PageTitle>

<RadzenDataGrid Data="@dataKunden" @ref="ordersGrid" TItem="Model.Kunden" AllowPaging="true" Style="height:100%" PageSize="20" AllowSorting="true" AllowFiltering="true" AllowColumnResize="true"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple" >
    <EmptyTemplate>
        <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem; height:100%">No records to display.</p>
    </EmptyTemplate>
    <HeaderTemplate>
        <RadzenRow>
            <RadzenColumn style="width:99vw;">
                <div style="float:right">
                    <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="person_add" Click="NeuerKunde" Text="Neuer Kunde" />
                </div>
            </RadzenColumn>
        </RadzenRow>
    </HeaderTemplate>
    <Columns>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="Kdnr" Title="Kdnr" >
        <EditTemplate Context="Kunden">
                <RadzenNumeric @bind-Value=Kunden.Kdnr Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="Kurzname" Title="Kurzname" >
         <EditTemplate Context="Kunden">
                <RadzenTextBox @bind-Value=Kunden.Kurzname Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="Vorname" Title="Vorname" >
         <EditTemplate Context="Kunden">
                <RadzenTextBox @bind-Value=Kunden.Vorname Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="Nachname" Title="Nachname" >
         <EditTemplate Context="Kunden">
                <RadzenTextBox @bind-Value=Kunden.Nachname Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="Geburtsdatum" Title="Geburtsdatum" FormatString="{0:d}">
         <EditTemplate Context="Kunden">
                <RadzenDatePicker @bind-Value=Kunden.Geburtsdatum Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="persoNr" Title="Personalausweisnummer" >
         <EditTemplate Context="Kunden">
                <RadzenTextBox @bind-Value=Kunden.persoNr Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="FührerscheinNr" Title="Führerscheinnummer" >
         <EditTemplate Context="Kunden">
                <RadzenTextBox @bind-Value=Kunden.FührerscheinNr Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="Email" Title="Email" >
         <EditTemplate Context="Kunden">
                <RadzenTextBox @bind-Value=Kunden.Email Style="width:100%; display:block" Name="Marke" />
                <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Model.Kunden" Property="TelNr" Title="Telefonnummer" >
            <EditTemplate Context="Kunden">
                    <RadzenTextBox @bind-Value=Kunden.TelNr Style="width:100%; display:block" Name="Marke" />
                    <RadzenRequiredValidator Text="Marke muss gesetzt sein" Component="Marke" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Model.Kunden" Context="order" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="156px">
            <Template Context="order">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRow(order))" >
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRow(order))"  >
                </RadzenButton>
            </Template>
            <EditTemplate Context="order">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRow(order))">
                </RadzenButton>
                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@((args) => CancelEdit(order))">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRow(order))">
                </RadzenButton>
            </EditTemplate>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    Model.Kunden orderToInsert;
    Model.Kunden orderToUpdate;
    RadzenDataGrid<Model.Kunden> ordersGrid;
    IEnumerable<Model.Kunden> orders;

    void Reset()
    {
        orderToInsert = null;
        orderToUpdate = null;
    }
    private async Task EditRow(Model.Kunden kunde)
    {
        await ordersGrid!.EditRow(kunde);
    }

      private void CancelEdit(Model.Kunden kunde)
    {
        ordersGrid!.CancelEditRow(kunde);
    }

    private List<Model.Kunden> dataKunden = new();
    private string[] kunden = new string[] { "Test", "Obama", "Pietsch", "Bill Gates", "Mark Zuck", "Cahrl Mags" };

    private async Task DeleteRow(Model.Kunden kunde)
    {
        if (dataKunden.Contains(kunde))
        {
            dataKunden.Remove(kunde);
            await ordersGrid!.Reload();
        }
        else
        {
            ordersGrid!.CancelEditRow(kunde);
            await ordersGrid!.Reload();
        }
    }

    private async Task SaveRow(Model.Kunden kunde)
    {
        await ordersGrid!.UpdateRow(kunde);
    }

    
    protected override async Task OnInitializedAsync()
    {
        Data.DataKunden dk = new Data.DataKunden();
        dataKunden = dk.GetKunden();
        await Task.CompletedTask;
    }

    private async Task NeuerKunde()
    {
        await DialogService.OpenAsync("Neuer Kunde", ds =>
    @<div>
    <RadzenColumn Size="12" SizeSM="6">
            <RadzenStack>
        <RadzenFormField Text="Kundennummer" Style="width: 100%;">
            <RadzenTextBox Disabled=true Value="123" Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Kurzname" Style="width: 100%;">
            <RadzenTextBox Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Vorname" Style="width: 100%;">
            <RadzenTextBox Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Nachname" Style="width: 100%;">
            <RadzenTextBox Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Geburtsdatum" Style="width: 100%;">
            <RadzenDatePicker TValue="DateTime" Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Personalausweisnummer" Style="width: 100%;">
            <RadzenTextBox Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Führerscheinnummer" Style="width: 100%;">
            <RadzenTextBox Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Email" Style="width: 100%;">
            <RadzenTextBox Style="width: 100%;" />
        </RadzenFormField>
         <RadzenFormField Text="Telefonnummer" Style="width: 100%;">
            <RadzenTextBox Style="width: 100%;" />
        </RadzenFormField>
         <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="person_add" Text="Kunde hinzufügen" Style="width: 100%;" Click="ds.Close"/>
          </RadzenStack>
        </RadzenColumn>
    </div>, new DialogOptions());
    }

}
